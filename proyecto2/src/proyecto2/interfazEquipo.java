/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto2;

import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jurgenn
 */
public class interfazEquipo extends javax.swing.JFrame {

    //Variables globales
    ControladorPrincipal control;
    boolean equipoCreado = false;

    int cantJugadores = 0;
    int cantAsistentes = 0;
    int cantFederativos = 0;

    public interfazEquipo(ControladorPrincipal control) {
        initComponents();
        cargarEntrenadores();
        cargarJugadores();
        cargarFederativos();
        cargarAsistentes();

        this.control = control;

        crudEquipo_cantJugador.setText("" + cantJugadores);
        crudEquipo_cantAsistente.setText("" + cantAsistentes);
        crudEquipo_cantFederativo.setText("" + cantFederativos);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        crudEquipo_codigoEquipo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        crudEquipo_nombrePais = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        crudEquipo_grupoInicial = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        crudEquipo_codigoConfederacion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        crudEquipo_scrollEntrenador = new javax.swing.JScrollPane();
        crudEquipo_tablaEntrenador = new javax.swing.JTable();
        crudEquipo_selectEntrenador = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        crudEquipo_scrollJugador = new javax.swing.JScrollPane();
        crudEquipo_tablaJugador = new javax.swing.JTable();
        crudEquipo_selectJugador = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        crudEquipo_cantJugador = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        crudEquipo_scrollAsistente = new javax.swing.JScrollPane();
        crudEquipo_tablaAsistente = new javax.swing.JTable();
        crudEquipo_selectAsistente = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        crudEquipo_cantAsistente = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        crudEquipo_scrollFederativo = new javax.swing.JScrollPane();
        crudEquipo_tablaFederativo = new javax.swing.JTable();
        crudEquipo_selectFederativo = new javax.swing.JButton();
        crudEquipo_cantFederativo = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        crudEquipo_crearEquipo = new javax.swing.JToggleButton();
        crudEquipo_botonSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Interfaz Equipo Create");

        jLabel2.setText("Codigo de Equipo:");

        jLabel3.setText("Nombre del Pais:");

        jLabel4.setText("Grupo inicial:");

        jLabel5.setText("Confederacion:");

        jLabel6.setText("Tabla de Entrenadores");

        crudEquipo_tablaEntrenador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        crudEquipo_scrollEntrenador.setViewportView(crudEquipo_tablaEntrenador);

        crudEquipo_selectEntrenador.setText("Seleccionar Entrenador");
        crudEquipo_selectEntrenador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crudEquipo_selectEntrenadorActionPerformed(evt);
            }
        });

        jLabel7.setText("Tabla de Jugadores");

        crudEquipo_tablaJugador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        crudEquipo_scrollJugador.setViewportView(crudEquipo_tablaJugador);

        crudEquipo_selectJugador.setText("Seleccionar Jugador");
        crudEquipo_selectJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crudEquipo_selectJugadorActionPerformed(evt);
            }
        });

        jLabel9.setText("Cantidad:");

        crudEquipo_cantJugador.setEditable(false);

        jLabel8.setText("Tabla de Asistentes");

        crudEquipo_tablaAsistente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        crudEquipo_scrollAsistente.setViewportView(crudEquipo_tablaAsistente);

        crudEquipo_selectAsistente.setText("Seleccionar Asistente");
        crudEquipo_selectAsistente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crudEquipo_selectAsistenteActionPerformed(evt);
            }
        });

        jLabel10.setText("Cantidad:");

        crudEquipo_cantAsistente.setEditable(false);

        jLabel11.setText("Tabla de Federativos");

        crudEquipo_tablaFederativo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        crudEquipo_scrollFederativo.setViewportView(crudEquipo_tablaFederativo);

        crudEquipo_selectFederativo.setText("Seleccionar Federativo");
        crudEquipo_selectFederativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crudEquipo_selectFederativoActionPerformed(evt);
            }
        });

        crudEquipo_cantFederativo.setEditable(false);

        jLabel12.setText("Cantidad:");

        crudEquipo_crearEquipo.setText("Crear Equipo");
        crudEquipo_crearEquipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crudEquipo_crearEquipoActionPerformed(evt);
            }
        });

        crudEquipo_botonSalir.setText("Salir");
        crudEquipo_botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crudEquipo_botonSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(crudEquipo_codigoEquipo))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(crudEquipo_nombrePais)
                                        .addComponent(crudEquipo_grupoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(crudEquipo_codigoConfederacion, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))))
                            .addComponent(jLabel5)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(crudEquipo_selectEntrenador))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(crudEquipo_scrollEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(crudEquipo_crearEquipo)
                        .addGap(71, 71, 71)
                        .addComponent(crudEquipo_botonSalir)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(crudEquipo_scrollJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(crudEquipo_selectAsistente)
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(crudEquipo_cantAsistente, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(13, 13, 13))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(136, 136, 136)
                                .addComponent(jLabel11))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(crudEquipo_scrollFederativo, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(crudEquipo_scrollAsistente, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jLabel7)
                        .addGap(253, 253, 253)
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(crudEquipo_selectJugador)))
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(304, 304, 304))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(crudEquipo_cantJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96)
                        .addComponent(crudEquipo_selectFederativo)
                        .addGap(37, 37, 37)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(8, 8, 8))
                    .addComponent(crudEquipo_cantFederativo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54))
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(crudEquipo_codigoEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jLabel7)))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(crudEquipo_scrollAsistente, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(crudEquipo_cantAsistente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(crudEquipo_selectAsistente))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(crudEquipo_scrollFederativo, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(crudEquipo_nombrePais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(crudEquipo_grupoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(crudEquipo_codigoConfederacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(crudEquipo_crearEquipo)
                            .addComponent(crudEquipo_botonSalir))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(crudEquipo_scrollEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(crudEquipo_scrollJugador, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(crudEquipo_selectEntrenador)
                            .addComponent(crudEquipo_selectJugador)
                            .addComponent(crudEquipo_cantJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(crudEquipo_selectFederativo)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel12)
                            .addGap(6, 6, 6)
                            .addComponent(crudEquipo_cantFederativo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargarEntrenadores() {
        try {
            //Hago conexion
            Connection connection = Conexion.getConexion();
            Statement statement = connection.createStatement();

            //Realiza el query
            String query = "SELECT * FROM ENTRENADOR ORDER BY NUMERO_PASAPORTE";
            ResultSet output = statement.executeQuery(query);

            //Obtengo los metadatos y nombres de columnas
            ResultSetMetaData metaDatos = output.getMetaData();
            int index = metaDatos.getColumnCount();

            Vector nombreColumnas = new Vector();
            for (int i = 1; i <= index; i++) {
                nombreColumnas.add(metaDatos.getColumnLabel(i));
            }

            //Obtengo las tuplas en un vector que contiene vectores
            Vector filas = new Vector();
            while (output.next()) {
                Vector tupla = new Vector();
                for (int i = 1; i <= index; i++) {
                    tupla.add(output.getString(i));
                }
                filas.add(tupla);
            }

            //Muestro los resultados
            DefaultTableModel modelo = (DefaultTableModel) this.crudEquipo_tablaEntrenador.getModel();
            modelo.setDataVector(filas, nombreColumnas);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al cargar la tabla de Entrenadores");
        }
    }

    private void cargarJugadores() {
        try {
            //Hago conexion
            Connection connection = Conexion.getConexion();
            Statement statement = connection.createStatement();

            //Realiza el query
            String query = "SELECT * FROM JUGADOR ORDER BY NUMERO_PASAPORTE";
            ResultSet output = statement.executeQuery(query);

            //Obtengo los metadatos y nombres de columnas
            ResultSetMetaData metaDatos = output.getMetaData();
            int index = metaDatos.getColumnCount();

            Vector nombreColumnas = new Vector();
            for (int i = 1; i <= index; i++) {
                nombreColumnas.add(metaDatos.getColumnLabel(i));
            }

            //Obtengo las tuplas en un vector que contiene vectores
            Vector filas = new Vector();
            while (output.next()) {
                Vector tupla = new Vector();
                for (int i = 1; i <= index; i++) {
                    tupla.add(output.getString(i));
                }
                filas.add(tupla);
            }

            //Muestro los resultados
            DefaultTableModel modelo = (DefaultTableModel) this.crudEquipo_tablaJugador.getModel();
            modelo.setDataVector(filas, nombreColumnas);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al cargar la tabla de Jugadores");
        }
    }

    private void cargarFederativos() {
        try {
            //Hago conexion
            Connection connection = Conexion.getConexion();
            Statement statement = connection.createStatement();

            //Realiza el query
            String query = "SELECT * FROM FEDERATIVO ORDER BY NUMERO_PASAPORTE";
            ResultSet output = statement.executeQuery(query);

            //Obtengo los metadatos y nombres de columnas
            ResultSetMetaData metaDatos = output.getMetaData();
            int index = metaDatos.getColumnCount();

            Vector nombreColumnas = new Vector();
            for (int i = 1; i <= index; i++) {
                nombreColumnas.add(metaDatos.getColumnLabel(i));
            }

            //Obtengo las tuplas en un vector que contiene vectores
            Vector filas = new Vector();
            while (output.next()) {
                Vector tupla = new Vector();
                for (int i = 1; i <= index; i++) {
                    tupla.add(output.getString(i));
                }
                filas.add(tupla);
            }

            //Muestro los resultados
            DefaultTableModel modelo = (DefaultTableModel) this.crudEquipo_tablaFederativo.getModel();
            modelo.setDataVector(filas, nombreColumnas);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al cargar la tabla de Federativo");
        }
    }

    private void cargarAsistentes() {
        try {
            //Hago conexion
            Connection connection = Conexion.getConexion();
            Statement statement = connection.createStatement();

            //Realiza el query
            String query = "SELECT * FROM ASISTENTE ORDER BY NUMERO_PASAPORTE";
            ResultSet output = statement.executeQuery(query);

            //Obtengo los metadatos y nombres de columnas
            ResultSetMetaData metaDatos = output.getMetaData();
            int index = metaDatos.getColumnCount();

            Vector nombreColumnas = new Vector();
            for (int i = 1; i <= index; i++) {
                nombreColumnas.add(metaDatos.getColumnLabel(i));
            }

            //Obtengo las tuplas en un vector que contiene vectores
            Vector filas = new Vector();
            while (output.next()) {
                Vector tupla = new Vector();
                for (int i = 1; i <= index; i++) {
                    tupla.add(output.getString(i));
                }
                filas.add(tupla);
            }

            //Muestro los resultados
            DefaultTableModel modelo = (DefaultTableModel) this.crudEquipo_tablaAsistente.getModel();
            modelo.setDataVector(filas, nombreColumnas);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al cargar la tabla de Asistente");
        }
    }

    private void crudEquipo_crearEquipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crudEquipo_crearEquipoActionPerformed
        try {
            control.crearEquipo(crudEquipo_codigoEquipo.getText(), crudEquipo_nombrePais.getText(), crudEquipo_grupoInicial.getText(), crudEquipo_codigoConfederacion.getText());
            JOptionPane.showMessageDialog(null, "Equipo creado correctamente");
            equipoCreado = true;
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al crear el equipo");
        }
    }//GEN-LAST:event_crudEquipo_crearEquipoActionPerformed

    private void crudEquipo_selectEntrenadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crudEquipo_selectEntrenadorActionPerformed
        if (equipoCreado) {
            int pasaporteReal = Integer.parseInt((String) crudEquipo_tablaEntrenador.getModel().getValueAt(crudEquipo_tablaEntrenador.getSelectedRow(), 0));
            String paisNac = "'" + (String) crudEquipo_tablaEntrenador.getModel().getValueAt(crudEquipo_tablaEntrenador.getSelectedRow(), 1) + "'";
            String fechaIni = "'" + (String) crudEquipo_tablaEntrenador.getModel().getValueAt(crudEquipo_tablaEntrenador.getSelectedRow(), 2) + "'";
            String codEquipo = "'" + crudEquipo_codigoEquipo.getText() + "'";

            try {
                control.crearEntrenadorEquipo(paisNac, fechaIni, codEquipo, pasaporteReal);
                JOptionPane.showMessageDialog(null, "Entrenador seleccionado correctamente");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al seleccionar el entrenador");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Primero debe crear el equipo");
        }
    }//GEN-LAST:event_crudEquipo_selectEntrenadorActionPerformed

    private void crudEquipo_botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crudEquipo_botonSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_crudEquipo_botonSalirActionPerformed

    private void crudEquipo_selectJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crudEquipo_selectJugadorActionPerformed
        if (equipoCreado) {
            if (cantJugadores < 23) {
                int pasaporteReal = Integer.parseInt((String) crudEquipo_tablaJugador.getModel().getValueAt(crudEquipo_tablaJugador.getSelectedRow(), 0));
                String puesto = "'" + (String) crudEquipo_tablaJugador.getModel().getValueAt(crudEquipo_tablaJugador.getSelectedRow(), 1) + "'";
                int numCamiseta = Integer.parseInt((String) crudEquipo_tablaJugador.getModel().getValueAt(crudEquipo_tablaJugador.getSelectedRow(), 2));
                String codEquipo = "'" + crudEquipo_codigoEquipo.getText() + "'";
                String esCapt = "'" + (String) crudEquipo_tablaJugador.getModel().getValueAt(crudEquipo_tablaJugador.getSelectedRow(), 4) + "'";
                try {
                    control.crearJugadorEquipo(pasaporteReal, puesto, numCamiseta, codEquipo, esCapt);
                    JOptionPane.showMessageDialog(null, "Jugador seleccionado correctamente");
                    cantJugadores++;
                    crudEquipo_cantJugador.setText(""+cantJugadores);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Error al seleccionar el jugador");
                }
            } else {
                JOptionPane.showMessageDialog(null, "El equipo ya tiene 23 jugadores");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Primero debe crear el equipo");
        }
    }//GEN-LAST:event_crudEquipo_selectJugadorActionPerformed

    private void crudEquipo_selectAsistenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crudEquipo_selectAsistenteActionPerformed
        if (equipoCreado) {
            int pasaporteReal = Integer.parseInt((String) crudEquipo_tablaAsistente.getModel().getValueAt(crudEquipo_tablaAsistente.getSelectedRow(), 0));
            String paisNac = "'" + (String) crudEquipo_tablaAsistente.getModel().getValueAt(crudEquipo_tablaAsistente.getSelectedRow(), 1) + "'";
            String fechaIni = "'" + (String) crudEquipo_tablaAsistente.getModel().getValueAt(crudEquipo_tablaAsistente.getSelectedRow(), 2) + "'";
            String tipoAsist = "'" + (String) crudEquipo_tablaAsistente.getModel().getValueAt(crudEquipo_tablaAsistente.getSelectedRow(), 3) + "'";            
            String codEquipo = "'" + crudEquipo_codigoEquipo.getText() + "'";

            try {
                control.crearAsistenteEquipo(pasaporteReal, paisNac, fechaIni, tipoAsist,codEquipo);
                JOptionPane.showMessageDialog(null, "Asistente seleccionado correctamente");
                cantAsistentes++;
                crudEquipo_cantAsistente.setText(""+cantAsistentes);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al seleccionar el asistente");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Primero debe crear el equipo");
        }
    }//GEN-LAST:event_crudEquipo_selectAsistenteActionPerformed

    private void crudEquipo_selectFederativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crudEquipo_selectFederativoActionPerformed
        if (equipoCreado) {
            int pasaporteReal = Integer.parseInt((String) crudEquipo_tablaFederativo.getModel().getValueAt(crudEquipo_tablaFederativo.getSelectedRow(), 0));
            String paisNac = "'" + (String) crudEquipo_tablaFederativo.getModel().getValueAt(crudEquipo_tablaFederativo.getSelectedRow(), 1) + "'";
            String fechaIni = "'" + (String) crudEquipo_tablaFederativo.getModel().getValueAt(crudEquipo_tablaFederativo.getSelectedRow(), 2) + "'";
            String puesto = "'" + (String) crudEquipo_tablaFederativo.getModel().getValueAt(crudEquipo_tablaFederativo.getSelectedRow(), 3) + "'";            
            String codEquipo = "'" + crudEquipo_codigoEquipo.getText() + "'";

            try {
                control.crearFederativoEquipo(pasaporteReal, paisNac, fechaIni, puesto,codEquipo);
                JOptionPane.showMessageDialog(null, "Federativo seleccionado correctamente");
                cantFederativos++;
                crudEquipo_cantFederativo.setText(""+cantFederativos);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al seleccionar el federativo");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Primero debe crear el equipo");
        }
    }//GEN-LAST:event_crudEquipo_selectFederativoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton crudEquipo_botonSalir;
    private javax.swing.JTextField crudEquipo_cantAsistente;
    private javax.swing.JTextField crudEquipo_cantFederativo;
    private javax.swing.JTextField crudEquipo_cantJugador;
    private javax.swing.JTextField crudEquipo_codigoConfederacion;
    private javax.swing.JTextField crudEquipo_codigoEquipo;
    private javax.swing.JToggleButton crudEquipo_crearEquipo;
    private javax.swing.JTextField crudEquipo_grupoInicial;
    private javax.swing.JTextField crudEquipo_nombrePais;
    private javax.swing.JScrollPane crudEquipo_scrollAsistente;
    private javax.swing.JScrollPane crudEquipo_scrollEntrenador;
    private javax.swing.JScrollPane crudEquipo_scrollFederativo;
    private javax.swing.JScrollPane crudEquipo_scrollJugador;
    private javax.swing.JButton crudEquipo_selectAsistente;
    private javax.swing.JButton crudEquipo_selectEntrenador;
    private javax.swing.JButton crudEquipo_selectFederativo;
    private javax.swing.JButton crudEquipo_selectJugador;
    private javax.swing.JTable crudEquipo_tablaAsistente;
    private javax.swing.JTable crudEquipo_tablaEntrenador;
    private javax.swing.JTable crudEquipo_tablaFederativo;
    private javax.swing.JTable crudEquipo_tablaJugador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
