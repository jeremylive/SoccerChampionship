/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto2;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jurgenn
 */
public class interfazPartido_RUD extends javax.swing.JFrame {

    ControladorPrincipal control;
    Vector<Integer> copiaCodigosPartido;

    /**
     * Creates new form interfazEquipo_RUD
     *
     * @param control
     */
    public interfazPartido_RUD(ControladorPrincipal control) {
        initComponents();
        cargarPartidos();
        this.control = control;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        rudPartido_tabla = new javax.swing.JTable();
        rudPartido_actualizar = new javax.swing.JButton();
        rudPartido_borrar = new javax.swing.JButton();
        rudPartido_salir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Interfaz Equipo Read, Update y Delete");

        rudPartido_tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(rudPartido_tabla);

        rudPartido_actualizar.setText("Actualizar");
        rudPartido_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rudPartido_actualizarActionPerformed(evt);
            }
        });

        rudPartido_borrar.setText("Borrar");
        rudPartido_borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rudPartido_borrarActionPerformed(evt);
            }
        });

        rudPartido_salir.setText("Salir");
        rudPartido_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rudPartido_salirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 729, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(rudPartido_actualizar)
                .addGap(136, 136, 136)
                .addComponent(rudPartido_borrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rudPartido_salir)
                .addGap(127, 127, 127))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rudPartido_actualizar)
                    .addComponent(rudPartido_borrar)
                    .addComponent(rudPartido_salir))
                .addGap(0, 27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargarPartidos() {
        try {
            //Inicializa el vector con codigos de equipo
            copiaCodigosPartido = new Vector<>();

            //Hago conexion
            Connection connection = Conexion.getConexion();
            Statement statement = connection.createStatement();

            //Realiza el query
            String query = "SELECT * FROM PARTIDO";
            ResultSet output = statement.executeQuery(query);

            //Obtengo los metadatos y nombres de columnas
            ResultSetMetaData metaDatos = output.getMetaData();
            int index = metaDatos.getColumnCount();

            Vector nombreColumnas = new Vector();
            for (int i = 1; i <= index; i++) {
                nombreColumnas.add(metaDatos.getColumnLabel(i));
            }

            //Obtengo las tuplas en un vector que contiene vectores
            Vector filas = new Vector();
            while (output.next()) {
                Vector tupla = new Vector();
                for (int i = 1; i <= index; i++) {
                    tupla.add(output.getString(i));
                }
                filas.add(tupla);
                copiaCodigosPartido.add(Integer.parseInt((String) tupla.get(0)));
            }

            //Muestro los resultados
            DefaultTableModel modelo = (DefaultTableModel) this.rudPartido_tabla.getModel();
            modelo.setDataVector(filas, nombreColumnas);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al cargar la tabla de Partidos");
        }
    }

    private void rudPartido_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rudPartido_salirActionPerformed
        this.dispose();
    }//GEN-LAST:event_rudPartido_salirActionPerformed

    private void rudPartido_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rudPartido_actualizarActionPerformed
        try {
            control.actualizarPartido(copiaCodigosPartido.get(rudPartido_tabla.getSelectedRow()),
                    (String) rudPartido_tabla.getModel().getValueAt(rudPartido_tabla.getSelectedRow(), 1),
                    (String) rudPartido_tabla.getModel().getValueAt(rudPartido_tabla.getSelectedRow(), 2),
                    (String) rudPartido_tabla.getModel().getValueAt(rudPartido_tabla.getSelectedRow(), 3),
                    Integer.parseInt((String) rudPartido_tabla.getModel().getValueAt(rudPartido_tabla.getSelectedRow(), 4)),
                    Integer.parseInt((String) rudPartido_tabla.getModel().getValueAt(rudPartido_tabla.getSelectedRow(), 5)),
                    Integer.parseInt((String) rudPartido_tabla.getModel().getValueAt(rudPartido_tabla.getSelectedRow(), 6)),
                    (String) rudPartido_tabla.getModel().getValueAt(rudPartido_tabla.getSelectedRow(), 7),
                    (String) rudPartido_tabla.getModel().getValueAt(rudPartido_tabla.getSelectedRow(), 8),
                    (String) rudPartido_tabla.getModel().getValueAt(rudPartido_tabla.getSelectedRow(), 9));
            this.cargarPartidos();
            JOptionPane.showMessageDialog(null, "Partido actualizado correctamente");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al actualizar el partido");
        }
    }//GEN-LAST:event_rudPartido_actualizarActionPerformed

    private void rudPartido_borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rudPartido_borrarActionPerformed
        control.borrarPartido(Integer.parseInt((String) rudPartido_tabla.getModel().getValueAt(rudPartido_tabla.getSelectedRow(), 0)));
        this.cargarPartidos();
    }//GEN-LAST:event_rudPartido_borrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton rudPartido_actualizar;
    private javax.swing.JButton rudPartido_borrar;
    private javax.swing.JButton rudPartido_salir;
    private javax.swing.JTable rudPartido_tabla;
    // End of variables declaration//GEN-END:variables
}
